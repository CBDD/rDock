#!/bin/csh
# Generates a header file (../include/VERSION) with
# string constants defining:
# 1) the major release of rDock
# 2) build number (highest changelist)
#
# Requires connection to Perforce to generate the
# build number, although p4utils.pl will return
# a dummy value if p4 is not available.
#
set tmpheader = VERSION
set header = ../include/${tmpheader}

if (-e $tmpheader) /bin/rm -f $tmpheader
set libver = `./p4utils.pl CODELINE`
set buildnum = `./p4utils.pl BUILDNUM`

# If we don't get a sensible value back from `./p4utils BUILDNUM`, then leave the
# existing header file in place (if it exists)
if ($#buildnum != 2) then
  if (-e $header) then
    exit 0;
  endif
  set buildnum = 'UNKNOWN';
endif

#
echo //Autogenerated by $0 > $tmpheader
echo \#ifndef _RBTVERSION_H_ >> $tmpheader
echo \#define _RBTVERSION_H_ >> $tmpheader
echo \#include \"RbtTypes.h\" >> $tmpheader
echo const RbtString IDS_VERSION = \"$libver\"\; >> $tmpheader
echo const RbtString IDS_BUILDNUM = \"$buildnum\"\; >> $tmpheader
echo \#endif //_RBTVERSION_H_ >> $tmpheader
#
# Now check if the header file is unchanged from the
# previous build. If so, no need to update it as this would
# trigger an unnecessary compile of the library.
if (-e $header) then
  diff  $tmpheader $header
  if ($status == 1) then
    /bin/mv $tmpheader $header
  else
    /bin/rm -f $tmpheader
  endif
else
  /bin/mv $tmpheader $header
endif
exit 0
